from Crypto.Util.number import *
import gmpy2
from secret import flag

p = getPrime(512)
q = getPrime(512)

n = p*q
e = 0x10001

phi = (p-1)*(q-1)
d = inverse(e, phi)

print(f'n = {n}')
print(f'd = {d}')

p = gmpy2.next_prime(p)
q = gmpy2.next_prime(q)

n = p*q

c = pow(bytes_to_long(flag), e, n)

print(f'c = {c}')

'''
n = 68274451921120277644948315205903565990650196980715136551996124256176509450128201639785762404227426888959564875334094317644401605198574580124331325413645642861383210582310149317118337973703508520423245755267301953610726622840072130070117276148941811918481259947951260676470382810616211219540977748150979224577
d = 43114675179020764005276881351168423670431192337822552776918558958544349300441060058656538487592600961693097821544727824435528096079286625463868902048753191189256462566444471259845881929951660235184216054342569280069515417833208174110357747378750276295157914757772622406407127846898706334277868561576243011881
c = 51098255797834981033841219322332292220735068619167968197620039301307880175704232879247748907921281981721787007591904661458572658183962642385305796982572345197335930370114355999933696132692879261552378752967869998842188148204815176072508330395979258872602226410064225989593463522506018475272551792851393180501
'''